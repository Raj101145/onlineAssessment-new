@{
    ViewData["Title"] = "Payment Successful";
    Layout = "_Layout";

    // Check if we have a test ID in TempData or ViewBag
    int? testId = null;

    // First check ViewBag (set by the controller)
    if (ViewBag.TestId != null)
    {
        testId = (int)ViewBag.TestId;
    }
    // Then check TempData
    else if (TempData.ContainsKey("BookedTestId") && TempData["BookedTestId"] != null)
    {
        if (int.TryParse(TempData["BookedTestId"].ToString(), out int id))
        {
            testId = id;
        }
    }

    // If we still don't have a test ID, check the URL
    if (!testId.HasValue)
    {
        var urlTestId = Context.Request.Query["id"];
        if (!string.IsNullOrEmpty(urlTestId) && int.TryParse(urlTestId, out int id))
        {
            testId = id;
        }
    }

    // If we don't have a test ID, set a default one for testing
    if (!testId.HasValue)
    {
        // Set a default test ID (1) for testing
        testId = 1;
        TempData["BookedTestId"] = testId;
    }
}

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card shadow">
                <div class="card-body text-center p-5">
                    <div class="mb-4">
                        <i class="fas fa-check-circle text-success" style="font-size: 5rem;"></i>
                    </div>
                    <h2 class="card-title mb-3">Payment Successful!</h2>
                    <p class="card-text mb-4">Your payment has been processed successfully. You will be redirected to your bookings page in a moment.</p>
                    <div class="spinner-border text-primary mb-4" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                    <p class="text-muted small">If you are not redirected automatically, please click the button below.</p>
                    <a href="@(ViewBag.RedirectUrl != null ? ViewBag.RedirectUrl : Url.Action("MyBookings", "Test", new { refresh = true, testId = testId, fromPayment = true }))" class="btn btn-primary">Go to My Bookings</a>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Redirect to the test page after a short delay
        setTimeout(function() {
            // First check if we have a test ID from TempData
            var testId = @(testId.HasValue ? testId.Value.ToString() : "null");
            console.log('Test ID from server: ' + testId);

            // If not, try to check if there's a test ID in the URL
            if (!testId) {
                var urlParams = new URLSearchParams(window.location.search);
                testId = urlParams.get('id');
                console.log('Test ID from URL: ' + testId);
            }

            // Check if we have a redirect URL from the controller
            var redirectUrl = '@(ViewBag.RedirectUrl != null ? ViewBag.RedirectUrl : "")';

            // If we don't have a redirect URL, build one
            if (!redirectUrl) {
                // Always redirect to MyBookings with refresh parameter to force a fresh load
                // The TestController's MyBookings action will handle authentication
                redirectUrl = '@Url.Action("MyBookings", "Test")' + '?testId=' + testId + '&refresh=true&message=' + encodeURIComponent('Payment successful! You can now access your scheduled test.');

                // Add a flag to indicate we're coming from payment success
                redirectUrl += '&fromPayment=true';
            }

            // Log the redirect URL for debugging
            console.log('Redirecting to: ' + redirectUrl);

            // Force a hard refresh by adding a timestamp to the URL
            redirectUrl += (redirectUrl.indexOf('?') > -1 ? '&' : '?') + '_=' + new Date().getTime();

            window.location.href = redirectUrl;
        }, 3000);
    </script>
}
